<?php

//declare(strict_types = 1);

//18
interface coordinates
{
    public function showCoordinates();
}

//20
abstract class placesAbstract
{
    //  Methods
    abstract public function type();


    protected function numberOfReviews()
    {
        return 5;
    }
}

class places extends placesAbstract implements coordinates
{
    //      Properties
    public $query;
    public $name;
    public $category;
    private $postalCode;
    protected $rating;
    public $reviews;
    //17
    const numberHotels = 25;


    //      Methods
    //3, 16
    public function customize()
    {
        echo 'This is customize';
    }

    //10-11
        public function __set($name, $value)
    {
        $this->$name = $value;
    }

    public function __get($name)
    {
        return $this->$name;
    }

    public function setRatingCustom($rating)
    {
        $this->rating = $rating;
    }

    public function getRatingCustom()
    {
        return $this->rating;
    }

    //12
    public function __construct($query, $name, $category, $postalCode, $rating, $reviews)
    {
        $this->query = $query;
        $this->name = $name;
        $this->category = $category;
        $this->postalCode = $postalCode;
        $this->rating = $rating;
        $this->reviews = $reviews;
        var_dump($query . '<br>');
        var_dump($name . '<br>');
        var_dump($category . '<br>');
        var_dump($postalCode . '<br>');
        var_dump($rating . '<br>');
        var_dump($reviews . '<br>');
    }

    //14
    public function whatIsThis()
    {
        var_dump($this);

    }

    //19
    public function showCoordinates()
    {
        // TODO: Implement showCoordinates() method.

        echo 'Latitude: 46.3111745' . '<br>' . 'Longitude: 23.7609796';
    }

    //21
    public function type()
    {
        // TODO: Implement type() method.
        echo '<br>';
        echo "Building type:";
        return 'restaurant';
    }

    function numberOfReviews()
    {
        echo "Number of reviews:";
        return parent::numberOfReviews(); // TODO: Change the autogenerated stub
    }

    //24 ?
    public function attributeDescription()
    {   $variable = array();
//        $variable[] =  '<br>';
        $variable[] =  'Query is:' . $this->query ;
        $variable[] =  'Name is:' . $this->name;
        $variable[] =  'Category is:' . $this->category;
        $variable[] =  'Postal Code is:' . $this->postalCode;
        $variable[] =  'Rating is:' . $this->rating;
        $variable[] =  'Reviews is:' . $this->reviews;
        return implode(', <br>', $variable);
    }
}


//22 !nu extinde Car
class tunningPlaces extends places implements coordinates
{   public $query;
    public $name;
    public $category;
    private $postalCode;
    protected $rating;
    public $reviews;

    //  Methods
    public function __construct($query, $name, $category, $postalCode, $rating, $reviews)
    {
        parent::__construct($query, $name, $category, $postalCode, $rating, $reviews);
    }

    //23
    public function numberOfReviews()
    {
        return parent::numberOfReviews(); // TODO: Change the autogenerated stub
    }

    //24
    public function attributeDescription()
    {
       return parent::attributeDescription(); // TODO: Change the autogenerated stub

    }
}

//25
class Util
{
    static function switchCaseOfWords($text, $case)
    {
        switch($case) {
            case 1: $text = lcfirst($text);
            break;

            case 2: $text = strtoupper($text);
            break;

        }
        return $text;
    }
}